name: Next.js Application CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build:
    name: Build App
    if: ${{ github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      - name: Install dependencies
        run: npm install
      - name: Lint javascript
        if: ${{ inputs.LINT_JS == 'true' }}
        run: npm run lint:js

      - name: Lint scss
        if: ${{ inputs.LINT_SCSS == 'true' }}
        run: npm run lint:styles

      - name: Push Linting Fixes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_user_name: amutechtest
          commit_user_email: amu_deploy@amuniversal.com
          commit_message: "[Formatter] Apply prettier changes"

      - name: Use .env cache action
        uses: Andrews-McMeel-Universal/get-envs@v1
        with:
          azurecredentials: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ inputs.environment }}

      - name: Use cache-next-build action
        uses: Andrews-McMeel-Universal/cache-next-build@v1

  unit-tests:
    name: Unit Tests
    if: ${{ inputs.RUN_JEST_TESTS == 'true' }}
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use cache-next-install action
        if: ${{ inputs.NPM_INSTALL == 'false' }}
        uses: Andrews-McMeel-Universal/cache-next-install@v1


      - name: Use .env cache action
        uses: Andrews-McMeel-Universal/get-envs@v1
        with:
          azurecredentials: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ inputs.environment }}

      - name: Use cache-next-build action
        uses: Andrews-McMeel-Universal/cache-next-build@v1

      - name: Run Jest tests
        if: ${{ inputs.RUN_JEST_TESTS == 'true' }}
        run: npm run test:unit:ci

  integration-tests:
    name: Integration Tests
    if: ${{ inputs.RUN_PLAYWRIGHT_TESTS == 'true' || inputs.CHECK_SIZE_LIMIT == 'true' }}
    needs: [build]
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use cache-next-install action
        if: ${{ inputs.NPM_INSTALL == 'false' }}
        uses: Andrews-McMeel-Universal/cache-next-install@v1

      - name: Install Playwright Browsers
        if: ${{ inputs.RUN_PLAYWRIGHT_TESTS == 'true' }}
        run: npm run playwright install

      - name: Use .env cache action
        uses: Andrews-McMeel-Universal/get-envs@v1
        with:
          azurecredentials: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ inputs.environment }}

      - name: Use cache-next-build action
        uses: Andrews-McMeel-Universal/cache-next-build@v1

      - name: Run Playwright tests
        if: ${{ inputs.RUN_PLAYWRIGHT_TESTS == 'true' }}
        run: npm run test:integration:ci

      - uses: actions/upload-artifact@v4
        if: inputs.RUN_PLAYWRIGHT_TESTS == 'true' && always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - uses: andresz1/size-limit-action@v1
        if: ${{ inputs.CHECK_SIZE_LIMIT == 'true' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # The size-limit-action tries to run a
          # redundant npm run build
          skip_step: build
