name: Next.js Application CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
env:
  ENVIRONMENT: "development"
  # Foolproof artifact naming strategy
  ARTIFACT_PREFIX: "template-nextjs-ui"
  RUN_ID: ${{ github.run_id }}
  RUN_ATTEMPT: ${{ github.run_attempt }}

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  setup:
    name: Generate Artifact Names
    runs-on: ubuntu-latest
    outputs:
      artifact-name: ${{ steps.artifact-info.outputs.name }}
    steps:
      - name: Generate Artifact Names
        id: artifact-info
        run: |
          # Create consistent, unique artifact names
          BRANCH_NAME="${{ github.head_ref || github.ref_name }}"
          SAFE_BRANCH=$(echo "$BRANCH_NAME" | sed 's/[^a-zA-Z0-9-]/-/g' | sed 's/--*/-/g' | sed 's/^-\|-$//g')
          COMMIT_SHORT="${{ github.sha }}"
          COMMIT_SHORT=${COMMIT_SHORT:0:8}

          ARTIFACT_NAME="${{ env.ARTIFACT_PREFIX }}-${SAFE_BRANCH}-${COMMIT_SHORT}-${{ env.RUN_ID }}"

          echo "name=${ARTIFACT_NAME}" >> $GITHUB_OUTPUT
          echo "Generated artifact name: ${ARTIFACT_NAME}"

  lint:
    needs: setup
    name: Lint and Format Application
    if: ${{ github.actor != 'dependabot[bot]' }}
    uses: ./.github/workflows/mega-linter.yml
    with:
      LINT_FLAVOR: "cupcake"
      APPLY_FIXES_MODE: "commit"
      APPLY_FIXES_EVENT: "pull_request"
    secrets: inherit

  # Jobs that run in parallel after linting
  build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup UI
        uses: ./.github/actions/setup-ui

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.setup.outputs.artifact-name }}-build
          path: |
            .next/
          retention-days: 7

      - name: Upload deployment package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.setup.outputs.artifact-name }}-deploy
          path: |
            .next/
            out/
            package.json
            package-lock.json
            public/
          retention-days: 30

  unit-tests:
    name: Unit Tests
    needs: [setup, lint]
    if: ${{ github.actor != 'dependabot[bot]' }}
    uses: ./.github/workflows/automated-tests.yml
    with:
      test-command: "npm run test:unit:ci"
      artifact-name: "${{ needs.setup.outputs.artifact-name }}-test-results"
      timeout-minutes: 15
      upload-path: |
        coverage/
        unit/
        lcov-report/

  playwright-tests:
    name: Playwright Tests
    needs: [setup, lint, build]
    if: ${{ github.actor != 'dependabot[bot]' }}
    uses: ./.github/workflows/automated-tests.yml
    with:
      test-command: "npx playwright install --with-deps && npx playwright test"
      artifact-name: "${{ needs.setup.outputs.artifact-name }}-playwright-report"
      timeout-minutes: 60
      upload-path: "playwright-report/"
