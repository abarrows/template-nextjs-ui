name: ü§ñ Dependabot Automations

on:
  pull_request_target:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write

jobs:
  dependabot:
    if: github.actor == 'dependabot[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          compat-lookup: true
          alert-lookup: true

      - name: Auto-approve and auto-merge security updates
        if: steps.metadata.outputs.alert-state != ''
        run: |
          echo "üîí Security update detected - auto-approving and enabling auto-merge"
          echo "Alert: ${{ steps.metadata.outputs.alert-state }}"
          gh pr review --approve "$PR_URL"
          gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-approve and auto-merge patch updates
        if: |
          steps.metadata.outputs.update-type == 'version-update:semver-patch' &&
          steps.metadata.outputs.alert-state == ''
        run: |
          echo "üîß Patch update detected - auto-approving and enabling auto-merge"
          gh pr review --approve "$PR_URL"
          gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Handle minor updates based on compatibility score
        if: |
          steps.metadata.outputs.update-type == 'version-update:semver-minor' &&
          steps.metadata.outputs.alert-state == ''
        run: |
          COMPATIBILITY_SCORE="${{ steps.metadata.outputs.compatibility-score }}"
          echo "üîç Processing minor update with compatibility score: $COMPATIBILITY_SCORE"
          
          SCORE_INT=$(echo "$COMPATIBILITY_SCORE" | cut -d'.' -f1)
          
          if [ "$SCORE_INT" -ge 80 ] 2>/dev/null; then
            echo "‚úÖ High confidence (‚â•80): auto-approve and enable auto-merge"
            gh pr review --approve "$PR_URL"
            gh pr merge --auto --squash "$PR_URL"
          elif [ "$SCORE_INT" -gt 0 ] 2>/dev/null; then
            echo "‚ö†Ô∏è Lower confidence (<80): enable auto-merge only (requires manual approval)"
            gh pr merge --auto --squash "$PR_URL"
          else
            echo "‚ùì Unknown confidence score: enable auto-merge only (requires manual approval)"
            gh pr merge --auto --squash "$PR_URL"
          fi
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add labels
        uses: actions/github-script@v7
        with:
          script: |
            const updateType = '${{ steps.metadata.outputs.update-type }}';
            const labels = ['dependencies'];
            
            if ('${{ steps.metadata.outputs.alert-state }}' !== '') {
              labels.push('security');
            } else if (updateType.includes('patch')) {
              labels.push('auto-merged');
            } else if (updateType.includes('minor')) {
              labels.push('auto-merged');
            } else if (updateType.includes('major')) {
              labels.push('requires-review');
            }
            
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              labels: labels
            });

      - name: Log major update (no automation)
        if: |
          steps.metadata.outputs.update-type == 'version-update:semver-major' &&
          steps.metadata.outputs.alert-state == ''
        run: |
          echo "üö® Major update detected - requires manual review"
          echo "Dependency: ${{ steps.metadata.outputs.dependency-names }}"
          echo "PR: ${{ github.event.pull_request.html_url }}"
