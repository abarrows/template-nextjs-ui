name: ðŸ“„ Release Drafter

on:
  push:
    branches:
      - main
      - "release/**"
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

permissions:
  contents: read

jobs:
  # Draft release when pushes happen to main branch (but not from release/* merges)
  draft-release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'Merge branch ''release/')
    permissions:
      contents: write
      pull-requests: write
    name: Draft Release
    runs-on: ubuntu-latest
    steps:
      - name: Draft Release Notes
        uses: release-drafter/release-drafter@b1476f6e6eb133afa41ed8589daba6dc69b4d3f5 # v6.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          publish: false
          prerelease: false

  # Create prerelease when pushes happen to release/* branches
  publish-prerelease:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/release/')
    permissions:
      contents: write
      pull-requests: write
    name: Publish Prerelease
    runs-on: ubuntu-latest
    steps:
      - name: Publish Pre-Release Notes
        uses: release-drafter/release-drafter@b1476f6e6eb133afa41ed8589daba6dc69b4d3f5 # v6.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          publish: true
          prerelease: true
          prerelease-identifier: "rc"

  # Publish final release when release/* branch is merged to main
  publish-release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, 'Merge branch ''release/')
    permissions:
      contents: write
      pull-requests: write
    name: Publish Release
    runs-on: ubuntu-latest
    steps:
      - name: Publish Production Release Notes
        uses: release-drafter/release-drafter@b1476f6e6eb133afa41ed8589daba6dc69b4d3f5 # v6.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          publish: true
          prerelease: false

  # Update draft on PR activity (for changelog updates and autolabeling)
  update-draft-on-pr:
    if: github.event_name == 'pull_request'
    permissions:
      contents: write
      pull-requests: write
    name: Update Draft on PR
    runs-on: ubuntu-latest
    steps:
      - name: Update Draft Release Notes
        uses: release-drafter/release-drafter@b1476f6e6eb133afa41ed8589daba6dc69b4d3f5 # v6.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          publish: false
          prerelease: false
