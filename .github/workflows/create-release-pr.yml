name: "Sync Release Branch Downstream to Default Branch"

on:
  push:
    branches:
      - "release/*"
  workflow_dispatch:
jobs:
  create_sync_pr:
    name: Sync Release Branch Downstream to Default Branch
    runs-on: ubuntu-latest

    env:
      BASE_BRANCH: develop
      CLEAN_NAME: ${{ github.ref_name }}
      INTERMEDIATE_BRANCH: feature/sync-${{ github.ref_name }}-to-develop
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout release branch
        uses: actions/checkout@v5
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - name: Setup Git User
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Set up GitHub CLI
        run: |
          echo "gh path: $(which gh)"
          gh --version

      - name: Create Sync Branch from release/*
        id: create_sync_branch
        uses: peterjgrainger/action-create-branch@v2.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: ${{ env.INTERMEDIATE_BRANCH }}
          sha: ${{ github.sha }} # SHA of the latest commit on release/*

      - name: Prepare Sync Branch
        run: |
          git fetch origin
          git checkout $INTERMEDIATE_BRANCH

          # Optional: rebase or merge release with develop here if needed
          # git merge origin/develop

          git push -u origin $INTERMEDIATE_BRANCH

      # The following steps detect and optionally create a downstream PR from release/* to develop
      # These are commented out until you're ready to turn it on

      # - name: Check for existing downstream PR
      #   id: check_pr
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     existing_pr=$(gh pr list \
      #       --base "$BASE_BRANCH" \
      #       --head "$INTERMEDIATE_BRANCH" \
      #       --state open \
      #       --json number \
      #       --jq '.[0].number // ""')
      #     echo "existing_pr=$existing_pr" >> $GITHUB_OUTPUT
      #     if [[ -n "$existing_pr" ]]; then
      #       echo "Found existing PR: #$existing_pr"
      #     else
      #       echo "No existing PR found."
      #     fi

      # - name: Create Pull Request to Sync Release to Develop
      #   if: steps.check_pr.outputs.existing_pr == ''
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     PR_TITLE="üîÅ Sync ${CLEAN_NAME} ‚Üí develop"
      #     PR_BODY="This automated PR brings hotfixes from \`${CLEAN_NAME}\` into \`develop\` to prevent regressions."
      #     gh pr create \
      #       --title "$PR_TITLE" \
      #       --body "$PR_BODY" \
      #       --head "$INTERMEDIATE_BRANCH" \
      #       --base "$BASE_BRANCH" \
      #       --label "auto-sync"
