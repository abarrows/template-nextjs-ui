name: Application CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, development]
    paths-ignore:
      - '**/*.md'
      - '**/*.ps1'
      - '**/Secrets.json*'
      - '.*ignore'
      - '.devcontainer/'
      - '.vscode/'
      - '.github/'
      - '!.github/workflows/application-ci.yml'
  workflow_dispatch:
    inputs:
      APPLY_FIXES:
        type: string
        description: Comma-separated list of linters to run
        default: 'all'
      APPLY_FIXES_MODE:
        type: choice
        description: 'Create PR or commit directly to branch'
        options:
          - 'pull_request'
          - 'commit'
      APPLY_FIXES_EVENT:
        type: choice
        description: 'Create PR or commit directly to branch'
        options:
          - 'all'
          - 'push'
          - 'pull_request'
          - 'none'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  pull-requests: write
  contents: write
  statuses: write

env:
  environment: ci

jobs:
  # Sets up dependencies and initial cache
  install-and-build:
    name: Install and Build
    if: ${{ github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use .env cache action
        uses: Andrews-McMeel-Universal/get-envs@v1
        with:
          azurecredentials: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ env.environment }}

      - uses: ./.github/actions/use-install-cache

      - uses: ./.github/actions/use-build-cache

  # Required status check
  # Checks code quality
  lint:
    name: Run MegaLinter
    needs: [install-and-build]
    runs-on: ubuntu-latest
    env:
      APPLY_FIXES: ${{ inputs.APPLY_FIXES || 'all' }}
      APPLY_FIXES_MODE: ${{ inputs.APPLY_FIXES_MODE || 'commit' }}
      APPLY_FIXES_EVENT: ${{ inputs.APPLY_FIXES_EVENT || 'pull_request' }}
    steps:
      # This uses the PAT_ACTION_CI token as the normal GITHUB_TOKEN
      # doesn't have the permissions to trigger additional workflows
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_ACTION_CI }}
          fetch-depth: 0

      - name: Use .env cache action
        uses: Andrews-McMeel-Universal/get-envs@v1
        with:
          azurecredentials: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ env.environment }}

      - uses: ./.github/actions/use-install-cache

      # Run the MegaLinter Github Action
      - name: MegaLinter
        id: ml
        uses: oxsecurity/megalinter/flavors/cupcake@v6.20.1
        env:
          VALIDATE_ALL_CODEBASE: ${{ github.event_name == 'workflow_dispatch' }}
          GITHUB_TOKEN: ${{ secrets.PAT_ACTION_CI }}

      # Creates archive artifact of linting reports
      # Upload MegaLinter artifacts
      - name: Archive production artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: MegaLinter reports
          path: |
            megalinter-reports
            mega-linter.log
          retention-days: 7

      # Create pull request if applicable (for now works only on PR from same repository, not from forks)
      - name: Create Pull Request with applied fixes
        id: cpr
        if: steps.ml.outputs.has_updated_sources == 1 && (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == 'pull_request'
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.PAT_ACTION_CI  || secrets.GITHUB_TOKEN }}
          commit-message: '[MegaLinter] Apply linters automatic fixes'
          title: '[MegaLinter] Apply linters automatic fixes'
          labels: bot

      # Commit fixes back into the raised PR branch
      - name: Prepare Linting Fix Commit
        if: steps.ml.outputs.has_updated_sources == 1 && github.ref != 'refs/heads/main' && (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == 'commit'
        run: sudo chown -Rc $UID .git/

      - name: Commit and Push Linting Fixes
        if: steps.ml.outputs.has_updated_sources == 1 && github.ref != 'refs/heads/main' && (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == 'commit'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_user_name: amutechtest
          commit_user_email: amu_deploy@amuniversal.com
          commit_message: '[MegaLinter] Apply prettier changes'

  # Required status check
  test-in-ci:
    name: Run CI tests
    runs-on: ubuntu-latest
    needs: [install-and-build]
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use .env cache action
        uses: Andrews-McMeel-Universal/get-envs@v1
        with:
          azurecredentials: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ env.environment }}

      - uses: ./.github/actions/use-install-cache

      - uses: ./.github/actions/use-build-cache

      - name: Run Jest tests
        run: yarn test:unit:ci

      - name: Install Playwright Browsers
        run: yarn pretest:integration:ci

      - name: Run Playwright tests
        run: yarn test:integration:ci

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Run Broken Link Checker
        id: link-checker-report
        continue-on-error: true
        run: yarn postbuild && yarn test:links

      - name: Link Checker Results
        if: ${{ failure() }}
        run: echo "::warning ${{steps.link-checker-report.outputs.result}}"

      - uses: andresz1/size-limit-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # The size-limit-action tries to run a
          # redundant yarn build
          skip_step: build

  required-checks:
    name: Required Checks
    runs-on: ubuntu-latest
    needs: [test-in-ci]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
