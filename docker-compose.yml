version: '3.8'
services:
  puzzlesocietyui:
    # .env is loaded automatically by Docker and can be used to easily set
    # local secrets. Alternatively, you can use the `--env-file` flag with
    # the path to your secrets file during `docker compose up --build puzzlesocietyui`,
    # like `docker compose --env-file .env.local up --build puzzlesocietyui`. These
    # secrets can be used to dynamically supply the values for build args
    # and/or environment below.
    env_file:
      # Provide static and non-secret env values to be used during Next.js
      # runtime. Do not duplicate these values elsewhere or set them
      # dynamically from other values.
      - .env.production
    build:
      context: .
      args:
        # TODO-ONBOARDING: update and set envs
        # Set dynamic and/or secret env vars used during Next.js + Dockerfile
        # build processes. They are NOT available during runtime.
        - BASE_URL=${BASE_URL:?err}
        - NEXT_PUBLIC_BASE_URL=${NEXT_PUBLIC_BASE_URL:?err}
        - DEPLOY_ENV=${DEPLOY_ENV:?err}
        - NEXT_PUBLIC_DEPLOY_ENV=${DEPLOY_ENV:?err}
        - SENTRY_AUTH_TOKEN=${SENTRY_AUTH_TOKEN:?err}
    ports:
      - '3000:3000'
    environment:
      # TODO-ONBOARDING: update and set envs
      # Set dynamic and/or secret env vars used during Next.js runtime. Env
      # vars needed during both build and runtime need to be duplicated here.
      # Build + runtime:
      BASE_URL: ${BASE_URL:?err}
      NEXT_PUBLIC_BASE_URL: ${NEXT_PUBLIC_BASE_URL:?err}
      DEPLOY_ENV: ${DEPLOY_ENV:?err}
      NEXT_PUBLIC_DEPLOY_ENV: ${DEPLOY_ENV:?err}
      SENTRY_AUTH_TOKEN: ${SENTRY_AUTH_TOKEN:?err}
      # Runtime only:
      NEXTAUTH_URL: ${NEXTAUTH_URL:?err}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:?err}
